<% const chat = JSON.parse(conversation_history) %>

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ChatGPT Chat Module</title>

    <!-- Uncommented styles that are not recommended to change for regular user -->
    <link rel="stylesheet" href="/chat_interface.css" />
</head>

<body>
    <section class="component">
        <header class="header">
            ChatGPT 3.5
        </header>

        <section class="chat">

            <% chat.forEach(msg => { %>
                <% if(msg.role !== 'system') { %>
                    <% if(msg.role === 'assistant') { %>
    
                        <div class="gpt-message message">
    
                            <div class="section-gpt-profile-picture section-profile-picture">
                                <!-- <img alt="gpt-profile-picture" class="gpt-profile-picture"/> -->
                                <div class="gpt-profile-picture profile-picture">GPT</div>
                            </div>
    
                            <div class="section-gpt-message-text section-message-text">
                                <%= msg.content %>
                            </div>
                    
                        </div>
    
                    <% } else if(msg.role === 'user') { %>
    
                        <div class="user-message message">
    
                            <div class="section-user-profile-picture section-profile-picture">
                                <!-- <img alt="user-profile-picture" class="user-profile-picture"/> -->
                                <div class="user-profile-picture profile-picture">User</div>
                            </div>
    
                            <div class="section-user-message-text section-message-text">
                                <%= msg.content %>
                            </div>
                        
                        </div>
                        
                    <% } %>
                <% } %>
            <% }) %>
    
        </section>

        <button class="restart-chat-button">
            <img src="/icons/restart_icon.svg" alt="restart-icon"/>
            Restart Conversation
        </button>

        <section class="input">
            <form class="send-message-form">
                <textarea autocomplete="off" autocorrect="on" required autofocus class="send-message-input" placeholder="Send Message..."></textarea>
                <button class="send-message-button"><img src="/icons/send_icon.svg" alt="send-icon"/></button>
            </form>
            <div class="small-message">
                Embedded <a href="https://chat.openai.com/">ChatGPT</a> chat by <a href="https://nitro-storm.ru">StormShop</a>
            </div>
        </section>
    </section>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io.connect();

        const form = document.querySelector('.send-message-form')
        const input = document.querySelector('.send-message-input')
        const chat_box = document.querySelector('.chat')

        function createMessage(type = 'user', text = '') {
            const message_box = document.createElement('div')
            const profile_picture_section = document.createElement('div')
            const profile_picture = document.createElement('div')
            const text_section = document.createElement('div')

            message_box.classList.add(`${type}-message`)
            message_box.classList.add(`message`)

            profile_picture_section.classList.add(`section-${type}-profile-picture`)
            profile_picture_section.classList.add(`section-profile-picture`)

            profile_picture.classList.add(`${type}-profile-picture`)
            profile_picture.classList.add(`profile-picture`)

            text_section.classList.add(`section-${type}-message-text`)
            text_section.classList.add(`section-message-text`)
                
            profile_picture.innerHTML = type === 'user' ? 'User' : 'GPT'

            profile_picture_section.append(profile_picture)

            text_section.innerHTML = String(text)

            message_box.append(profile_picture_section)
            message_box.append(text_section)

            chat_box.append(message_box)
        }

        function handleSubmit(e) {
            e.preventDefault()
            const lastChild = chat_box.lastElementChild

            if (lastChild && lastChild.classList.contains('user-message')) {
                // IF LAST MESSAGE ALREADY WAS FROM USER
                return;
            } else {

                createMessage('user', input.value)

                const cookies = document.cookie.split(';');
                let cucId = '';

                cookies.forEach(i => {
                    if(i.includes('CUC-ID')) {
                        cucId = i.split('=')[1]
                    }
                })

                socket.emit('message_sent', {value: input.value, id: cucId });
                input.value = ''
            }
        }

        document.addEventListener('submit', handleSubmit)

        socket.on('get_gpt_response', (data) => {
            console.log('Got Response!')
            if(data.error) {
                // ERROR OCCURED NEEDS TO BE DISPLAYED
                return;
            } else {
                createMessage('gpt', data.gpt_response)
            }
        })
    </script>
</body>

</html>